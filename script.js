document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("loginForm");
    const loadingDiv = document.getElementById("loading");
    const resultDiv = document.getElementById("result");
    const toggleBtn = document.getElementById("toggleKey");
    const keyInput = document.getElementById("key");

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞ –∫–ª—é—á–∞
    toggleBtn.addEventListener("click", () => {
        if (keyInput.type === "password") {
            keyInput.type = "text";
            toggleBtn.textContent = "üôà";
        } else {
            keyInput.type = "password";
            toggleBtn.textContent = "üëÅÔ∏è";
        }
    });

    form.addEventListener("submit", async function (e) {
        e.preventDefault();

        const phoneInput = document.getElementById("phone").value.trim();
        const keyValue = keyInput.value.trim().toLowerCase();
        const inputPhone = normalizePhone(phoneInput);

        // –ü–æ–∫–∞–∑–∞—Ç—å "–∑–∞–≥—Ä—É–∑–∫–∞"
        loadingDiv.style.display = "block";
        resultDiv.style.display = "none";

        await new Promise(resolve => setTimeout(resolve, 1000));

        try {
            const res = await fetch("data.xlsx");
            const arrayBuffer = await res.arrayBuffer();
            const workbook = XLSX.read(arrayBuffer, { type: "array" });
            const sheet = XLSX.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]]);

            const found = sheet.find(row =>
                normalizePhone(row["–¢–µ–ª–µ—Ñ–æ–Ω"]) === inputPhone &&
                String(row["–ö–ª—é—á"]).trim().toLowerCase() === keyValue
            );

            loadingDiv.style.display = "none";
            resultDiv.style.display = "block";

            if (found) {
                form.style.display = "none";
                resultDiv.innerHTML = `
                    <h2>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</h2>
                    <p><strong>–§–ò–û:</strong> ${found["–§–ò–û"]}</p>
                    <p><strong>–ü–æ–∫—É–ø–æ–∫:</strong> ${found["–ü–æ–∫—É–ø–æ–∫"]}</p>
                    <p><strong>–°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫:</strong> ${found["–°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫"]}</p>
                    <p><strong>–ë–æ–Ω—É—Å—ã:</strong> ${found["–ë–æ–Ω—É—Å—ã"]}</p>
                `;
            } else {
                resultDiv.innerHTML = `<p style='color:red;'>–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –∫–ª—é—á.</p>`;
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–∞–±–ª–∏—Ü—ã:", error);
            loadingDiv.style.display = "none";
            resultDiv.style.display = "block";
            resultDiv.innerHTML = "<p style='color:red;'>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.</p>";
        }
    });

    function normalizePhone(phone) {
        if (!phone) return "";
        return String(phone).replace(/[^0-9]/g, "").replace(/^8/, "7");
    }
});
